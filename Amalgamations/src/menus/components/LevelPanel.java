package menus.components;

import amalgamation.Amalgamation;

/**
 * Panel that displays stats for the currently displayed Amalgamation,
 * more specifically it displays the current level 
 * and an experience bar that shows the current experience value 
 * and the value need to go to the next level in a graphical format.
 *
 * @author Adam Meanor, Caleb Rush
 */
public class LevelPanel extends acomponent.AComponent {
    
    Amalgamation amalgamation;

    /**
     * Creates a new form LevelPanel
     * 
     * @param amalgamation the amalgamation that is being displayed.
     */
    public LevelPanel(Amalgamation amalgamation) {
        initComponents();
        this.amalgamation = amalgamation;
        this.displayName(amalgamation);
        this.displayLevel(amalgamation);
        this.displayExperience(amalgamation);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nameLabel = new javax.swing.JLabel();
        currentLevelLabel = new javax.swing.JLabel();
        targetExperienceLabel = new javax.swing.JLabel();
        experienceBar = new menus.components.HealthBar();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 3, 3, new java.awt.Color(204, 204, 204)));
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0, 10, 0};
        setLayout(layout);

        nameLabel.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(244, 67, 54));
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nameLabel.setText("dhfffffffs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(nameLabel, gridBagConstraints);

        currentLevelLabel.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        currentLevelLabel.setForeground(new java.awt.Color(33, 150, 243));
        currentLevelLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        currentLevelLabel.setText("LV: 15");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(currentLevelLabel, gridBagConstraints);

        targetExperienceLabel.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        targetExperienceLabel.setForeground(new java.awt.Color(76, 175, 80));
        targetExperienceLabel.setText("Exp:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(targetExperienceLabel, gridBagConstraints);

        experienceBar.setMaximumSize(null);
        experienceBar.setMinimumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout experienceBarLayout = new javax.swing.GroupLayout(experienceBar);
        experienceBar.setLayout(experienceBarLayout);
        experienceBarLayout.setHorizontalGroup(
            experienceBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
        );
        experienceBarLayout.setVerticalGroup(
            experienceBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(experienceBar, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentLevelLabel;
    private menus.components.HealthBar experienceBar;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel targetExperienceLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Sets the text of nameLabel to the name of the currently displayed 
     * Amalgamation.
     * 
     * @param amalgamation the currently displayed Amalgamation.
     */
    private void displayName(Amalgamation amalgamation) {
        nameLabel.setText(amalgamation.getName());
    }
    
    /**
     * Sets the text of currentLevelLabel 
     * to the current level value of the currently displayed Amalgamation.
     * 
     * @param amalgamtaion the currently displayed Amalgamation.
     */
    private void displayLevel(Amalgamation amalgamtaion) {
        currentLevelLabel.setText("LV: " + amalgamation.getLevel());
    }
    
    /**
     * Gives the experienceBar object the current experience value 
     * and the value need to level up and then generates the bar.
     * @param amalgamation 
     */
    private void displayExperience(Amalgamation amalgamation) {
        targetExperienceLabel.setText("EXP: ");
        experienceBar.setMaxHealth(amalgamation.getTargetExperience());
        experienceBar.setCurrentHealth(0);
        experienceBar.animateHealth(amalgamation.getExperience());
    }
    
    @Override
    public void setSize(int width, int height) {
        super.setSize(width, height);
        revalidate();
        repaint();
    }

}
